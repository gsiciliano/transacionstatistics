version: "3"
services:
  app:
    build:
      context: ./
      dockerfile: docker/prod/app.dockerfile
    restart: unless-stopped
    environment:
      - "TZ=Europe/Rome"
    container_name: ${APP_NAME}_app
    volumes:
      - app:/var/www
    networks:
      - default
    depends_on:
      - database

  scheduler:
    build:
      context: ./
      dockerfile: docker/prod/scheduler.dockerfile
    restart: unless-stopped
    container_name: ${APP_NAME}_scheduler
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - app

  web:
    build:
      context: ./
      dockerfile: docker/prod/web.dockerfile
    restart: unless-stopped
    container_name: ${APP_NAME}_web
    environment:
      - "TZ=Europe/Rome"
    volumes:
      - app:/var/www
    ports:
      - ${HTTP_FORWARD_PORT}:80
      - ${HTTPS_FORWARD_PORT}:443
    networks:
      - default
    depends_on:
      - app

  database:
    image: mariadb
    restart: unless-stopped
    container_name: ${APP_NAME}_db
    environment:
      - "TZ=Europe/Rome"
      - "MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}"
      - "MYSQL_DATABASE=${DB_DATABASE}"
      - "MYSQL_USER=${DB_USER}"
      - "MYSQL_PASSWORD=${DB_PASSWORD}"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - default

  redis:
    image: "redis:3.2"
    command: "redis-server --appendonly yes"
    restart: unless-stopped
    container_name: ${APP_NAME}_redis
    environment:
      - "TZ=Europe/Rome"
    volumes:
      - "redis_data:/data"
    networks:
      - default

volumes:
  app:
  mysql-data:
  redis_data:
networks:
  default:
    driver: bridge
